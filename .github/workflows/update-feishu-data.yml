name: 更新飞书数据到CSV

on:
  repository_dispatch:
    types: [feishu_update]

jobs:
  update-csv:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      
    - name: 解析飞书数据
      run: |
        echo "=== 解析飞书数据 ==="
        
        # 从GitHub dispatch事件中提取数据
        SHOP_CODE="${{ github.event.client_payload.shop_code }}"
        LATITUDE="${{ github.event.client_payload.latitude }}"
        LONGITUDE="${{ github.event.client_payload.longitude }}"
        OUTLET_NAME="${{ github.event.client_payload.outlet_name }}"
        
        echo "原始数据:"
        echo "  shop_code: $SHOP_CODE"
        echo "  latitude: $LATITUDE"
        echo "  longitude: $LONGITUDE"
        echo "  outlet_name: $OUTLET_NAME"
        
        # 验证必填字段
        if [ -z "$SHOP_CODE" ] || [ -z "$LATITUDE" ] || [ -z "$LONGITUDE" ] || [ -z "$OUTLET_NAME" ]; then
          echo "❌ 错误：缺少必填字段"
          echo "必填字段：shop_code, latitude, longitude, outlet_name"
          exit 1
        fi
        
        # 验证并处理纬度经度数据
        echo "=== 处理坐标数据 ==="
        
        # 移除引号和空格，转换为纯数字
        LATITUDE_CLEAN=$(echo "$LATITUDE" | sed 's/["\s]//g')
        LONGITUDE_CLEAN=$(echo "$LONGITUDE" | sed 's/["\s]//g')
        
        echo "纬度: \"$LATITUDE\" -> $LATITUDE_CLEAN"
        echo "经度: \"$LONGITUDE\" -> $LONGITUDE_CLEAN"
        
        # 验证是否为有效数字
        if ! [[ "$LATITUDE_CLEAN" =~ ^-?[0-9]+\.?[0-9]*$ ]]; then
          echo "❌ 纬度格式无效: $LATITUDE_CLEAN"
          exit 1
        fi
        
        if ! [[ "$LONGITUDE_CLEAN" =~ ^-?[0-9]+\.?[0-9]*$ ]]; then
          echo "❌ 经度格式无效: $LONGITUDE_CLEAN"
          exit 1
        fi
        
        echo "✅ 数据验证通过"
        
        # 设置环境变量供后续步骤使用
        echo "SHOP_CODE=$SHOP_CODE" >> $GITHUB_ENV
        echo "LATITUDE=$LATITUDE_CLEAN" >> $GITHUB_ENV
        echo "LONGITUDE=$LONGITUDE_CLEAN" >> $GITHUB_ENV
        echo "OUTLET_NAME=$OUTLET_NAME" >> $GITHUB_ENV
        
    - name: 更新CSV文件
      run: |
        # 确保CSV文件存在
        if [ ! -f "public/markers.csv" ]; then
          echo "shop_code,latitude,longitude,outlet_name,brand,kecamatan,potensi" > public/markers.csv
          echo "📝 创建新的CSV文件"
        fi
        
        # 处理outlet_name中的特殊字符
        OUTLET_NAME_CLEAN=$(echo "$OUTLET_NAME" | sed 's/,/，/g' | sed 's/"//g')
        
        # 设置默认值
        OUTLET_NAME_CLEAN=${OUTLET_NAME_CLEAN:-""}
        
        # 检查是否已存在该shop_code的记录
        if grep -q "^$SHOP_CODE," public/markers.csv; then
          echo "🔄 更新现有记录: $SHOP_CODE"
          # 删除旧记录
          grep -v "^$SHOP_CODE," public/markers.csv > temp.csv
          mv temp.csv public/markers.csv
        else
          echo "➕ 添加新记录: $SHOP_CODE"
        fi
        
        # 确保文件以换行符结尾
        if [ -s public/markers.csv ] && [ "$(tail -c1 public/markers.csv | wc -l)" -eq 0 ]; then
          echo "" >> public/markers.csv
        fi
        
        # 添加新记录（7个字段：前4个有数据，后3个为空）
        echo "$SHOP_CODE,$LATITUDE,$LONGITUDE,$OUTLET_NAME_CLEAN,,," >> public/markers.csv
        
        echo "✅ CSV文件更新完成"
        echo "📊 添加的记录: $SHOP_CODE,$LATITUDE,$LONGITUDE,$OUTLET_NAME_CLEAN,,,"
        
        # 显示更新后的文件行数
        LINE_COUNT=$(wc -l < public/markers.csv)
        echo "📊 当前CSV文件总行数: $LINE_COUNT"
        
        # 显示最新的几行记录用于验证
        echo "📋 最新的3行记录:"
        tail -n 3 public/markers.csv
        
    - name: 提交更改到仓库
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add public/markers.csv
        git commit -m "飞书数据更新: 添加/更新门店 $SHOP_CODE" || echo "没有变更需要提交"
        git push 