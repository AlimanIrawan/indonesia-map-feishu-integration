Render平台部署飞书数据服务完整指南

====================================================================
概述说明
====================================================================

Render是一个现代化的云平台，支持Node.js应用部署，非常适合我们的飞书数据接收服务。
免费套餐提供：512MB RAM，每月750小时运行时间，足够个人项目使用。

部署完成后，您将获得一个类似这样的服务器地址：
https://your-app-name.onrender.com

====================================================================
第一步：准备Render账户
====================================================================

1. 访问 https://render.com
2. 点击"Get Started for Free"注册账户
3. 可以使用GitHub、GitLab或邮箱注册
4. 验证邮箱完成注册

====================================================================
第二步：准备代码仓库
====================================================================

1. 登录GitHub（如果没有账户需要先注册）
2. 在项目根目录下双击运行"首次推送到Git.sh"
3. 按照提示完成Git仓库创建和代码推送
4. 确保代码已成功推送到GitHub

====================================================================
第三步：在Render创建Web Service
====================================================================

1. 登录Render控制台
2. 点击"New +" → 选择"Web Service"
3. 选择"Build and deploy from a Git repository"
4. 点击"Connect account"连接您的GitHub账户
5. 授权Render访问您的GitHub仓库
6. 在仓库列表中找到您的项目，点击"Connect"

====================================================================
第四步：配置Web Service
====================================================================

基本设置：
- Name: indonesia-map-feishu-service（或您喜欢的名称）
- Region: Singapore（距离印尼最近的区域）
- Branch: main
- Root Directory: feishu-webhook-server
- Runtime: Node
- Build Command: npm install
- Start Command: node server.js

高级设置：
点击"Advanced"展开高级选项

环境变量设置：
添加以下环境变量（点击"Add Environment Variable"）：
- Key: PORT, Value: 3001
- Key: API_TOKEN, Value: your-super-secret-token-12345
- Key: NODE_ENV, Value: production

实例类型：
- 选择"Free"（免费套餐）

自动部署：
- 勾选"Auto-Deploy"（代码更新时自动重新部署）

====================================================================
第五步：等待部署完成
====================================================================

1. 点击"Create Web Service"开始部署
2. 等待构建过程完成（通常需要3-5分钟）
3. 部署成功后，您会看到绿色的"Live"状态
4. 记录您的服务器地址，格式类似：
   https://indonesia-map-feishu-service.onrender.com

====================================================================
第六步：测试部署结果
====================================================================

1. 在浏览器中访问您的服务器地址
2. 应该看到类似这样的响应：
   {
     "service": "飞书数据接收服务",
     "version": "1.0.0",
     "status": "running",
     "endpoints": { ... }
   }

3. 测试健康检查接口：
   访问：https://您的域名.onrender.com/health

4. 运行本地测试工具验证连接：
   - 修改测试工具中的SERVER_URL为您的Render地址
   - 双击运行"飞书集成测试.sh"
   - 运行完整测试套件

====================================================================
第七步：更新飞书配置
====================================================================

1. 打开飞书多维表格的自动化设置
2. 找到HTTP请求配置
3. 将请求URL修改为：
   https://您的域名.onrender.com/api/feishu/webhook
4. 确保Authorization头部设置正确：your-super-secret-token-12345
5. 保存自动化配置

====================================================================
Render免费套餐说明
====================================================================

免费套餐限制：
✓ 512MB RAM（足够我们的应用）
✓ 每月750小时运行时间
✓ 自定义域名支持
✓ 自动SSL证书
✗ 15分钟无活动后会休眠
✗ 冷启动时间约30秒

休眠机制说明：
- 如果15分钟内没有HTTP请求，服务会自动休眠
- 下次收到请求时会自动唤醒（约30秒）
- 可以设置定时ping保持活跃状态

====================================================================
保持服务活跃的方法
====================================================================

方法1：使用UptimeRobot（推荐）
1. 注册 https://uptimerobot.com（免费）
2. 添加HTTP监控，URL设置为您的健康检查地址
3. 监控间隔设置为5分钟
4. 这样可以防止服务休眠

方法2：使用GitHub Actions定时ping
1. 在GitHub仓库中创建.github/workflows/keep-alive.yml
2. 设置定时任务每10分钟ping一次服务
3. 可以保持服务始终活跃

====================================================================
部署后的维护
====================================================================

查看日志：
1. 在Render控制台进入您的服务
2. 点击"Logs"标签页查看运行日志
3. 可以实时查看请求和错误信息

更新代码：
1. 在本地修改代码
2. 提交并推送到GitHub
3. Render会自动检测更改并重新部署

监控状态：
1. Render控制台显示服务运行状态
2. 可以查看CPU、内存使用情况
3. 设置告警通知

====================================================================
故障排除
====================================================================

问题1：构建失败
解决：检查package.json是否正确，确保所有依赖都已列出

问题2：服务启动失败
解决：查看Render日志，通常是端口配置或环境变量问题

问题3：飞书推送失败
解决：检查URL是否正确，API_TOKEN是否匹配

问题4：服务经常休眠
解决：设置UptimeRobot或GitHub Actions定时ping

====================================================================
成本说明
====================================================================

免费使用：
- 个人项目完全够用
- 每月750小时 = 每天约25小时
- 如果设置保持活跃，可能会超出免费额度

付费升级：
- Starter计划：每月7美元
- 512MB RAM，24/7运行
- 无休眠限制
- 更好的性能保证

====================================================================
安全建议
====================================================================

1. 修改默认API_TOKEN为复杂密码
2. 定期查看访问日志
3. 不要在公开代码中暴露敏感信息
4. 可以设置IP白名单（付费功能）

====================================================================
总结
====================================================================

Render是部署我们飞书数据服务的理想选择：
✓ 免费套餐足够使用
✓ 自动SSL证书
✓ 简单的部署流程
✓ 良好的日志和监控
✓ 自动扩展能力

部署完成后，您就有了一个稳定的服务器地址，可以接收飞书的数据推送。
记得在飞书配置中更新服务器地址，然后就可以开始使用了！

需要帮助？查看Render官方文档：https://render.com/docs 