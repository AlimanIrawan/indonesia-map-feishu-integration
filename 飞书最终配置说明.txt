=== 飞书最终配置说明 ===

✅ **Render配置已更新完成！**

🔧 **已完成的更改**：
- ✅ 更新了 render.yaml 配置文件
- ✅ 修改服务名为: feishu-github-proxy  
- ✅ 设置启动命令: node feishu-proxy-server.js
- ✅ 添加健康检查路径: /health
- ✅ 准备好自动部署脚本

🚀 **下一步操作**：

**第一步：部署到Render**
1. 双击运行 `更新Render部署.sh`
2. 等待Git推送完成
3. Render会自动检测更改并重新部署

**第二步：确认部署状态**
1. 访问 https://dashboard.render.com
2. 找到你的服务（现在叫 feishu-github-proxy）
3. 查看部署日志，确认状态为 "Live"

**第三步：测试新服务器**
部署完成后，你会获得新的URL，格式如：
```
https://feishu-github-proxy-xxx.onrender.com
```

测试链接：
- 健康检查: https://你的域名.onrender.com/health
- 服务信息: https://你的域名.onrender.com/

**第四步：更新飞书配置**

🔄 **修改飞书自动化**：
1. **URL改为**：
   ```
   https://你的域名.onrender.com/feishu-to-github
   ```

2. **请求头设置**：
   - 删除 `Authorization: token ghp_xxx`
   - 只保留 `Content-Type: application/json`

3. **请求体保持不变**：
   ```json
   {
     "event_type": "feishu-data-update", 
     "client_payload": {
       "shop_code": "{{第1步满足条件... At Outlet Code}}",
       "latitude": "{{第1步满足条件... 5, latitude}}",
       "longitude": "{{第1步满足条件... 5, longitude}}",
       "outlet_name": "{{第1步满足条件... At Nama Pemilik}}"
     }
   }
   ```

📊 **预期响应**：
飞书现在会收到标准的JSON响应：
```json
{
  "success": true,
  "message": "GitHub Actions触发成功",
  "status": 204,
  "timestamp": "2025-06-17T10:14:34.158Z",
  "data": {...}
}
```

⚠️ **注意事项**：
1. 第一次访问可能需要10-30秒唤醒（冷启动）
2. 15分钟无请求会自动休眠，但飞书触发会立即唤醒
3. 所有请求都会在Render控制台显示日志

🎯 **问题解决**：
- ✅ 解决了GitHub API返回204空响应的问题
- ✅ 飞书现在能正常解析响应格式
- ✅ 保持GitHub Token安全（在服务器端）
- ✅ 提供详细的请求日志

准备好运行部署脚本了吗？ 